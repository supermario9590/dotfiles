#+title: Emacs Desktop Environment
#+property: header-args:emacs-lisp :tangle ~/.config/emacs/desktop.el

* Window Management
  
** EXWM Configuration
   
   We use the excellent [[https://github.com/ch11ng/exwm][EXWM]] module as the basis for our Emacs Desktop Environment. The [[https://github.com/ch11ng/exwm/wiki][EXWM Wiki]] is a great place to find tips about how to configure everything!
   
   #+begin_src emacs-lisp
   (defun av/run-in-background (command)
     (let ((command-parts (split-string command "[ ]+")))
       (apply #'call-process `(,(car command-parts) nil 0 nil ,@(cdr command-parts)))))
       
   (defun av/set-wallpaper ()
       (interactive)
       (start-process-shell-command
         "nitrogen" nil  "nitrogen --restore"))

   (defun av/exwm-init-hook ()
     ;; Make workspace 1 be the one where we land at startup
     (exwm-workspace-switch-create 1)
     
     ;; Launch apps that will run in the background
     (av/run-in-background "xfce4-power-manager")
     (av/run-in-background "nm-applet"))
   
   (defun av/exwm-update-class ()
     (exwm-workspace-rename-buffer exwm-class-name))
     
   (use-package exwm
     :config
     ;; Set the default number of workspaces
     (setq exwm-workspace-number 5)
     
     ;; When window "class" updates, use it to set the buffer name
     (add-hook 'exwm-update-class-hook #'av/exwm-update-class)
     
     ;; Run the init hook
     (add-hook 'exwm-init-hook #'av/exwm-init-hook)
     
     ;; Rebind CapsLock to Ctrl
     (start-process-shell-command "xmodmap" nil "xmodmap ~/.config/emacs/exwm/Xmodmap")
     
     (av/set-wallpaper)
     
     ;; Load the system tray before exwm-init
     (require 'exwm-systemtray)
     (exwm-systemtray-enable)
     
     ;; These keys should always pass through to Emacs
     (setq exwm-input-prefix-keys
       '(?\C-x
         ?\C-u
         ?\C-h
         ?\M-x
         ?\M-`
         ?\M-&
         ?\M-:
         ?\C-\M-j  ;; Buffer list
         ?\C-\ ))  ;; Ctrl+Space
         
     ;; Ctrl+Q will enable the next key to be sent directly
     (define-key exwm-mode-map [?\C-q] 'exwm-input-send-next-key)

     ;; Set up global key bindings.  These always work, no matter the input state!
     ;; Keep in mind that changing this list after EXWM initializes has no effect.
     (setq exwm-input-global-keys
          `(
            ;; Reset to line-mode (C-c C-k switches to char-mode via exwm-input-release-keyboard)
            ([?\s-r] . exwm-reset)
            
            ;; Move between windows
            ([s-left] . windmove-left)
            ([s-right] . windmove-right)
            ([s-up] . windmove-up)
            ([s-down] . windmove-down)
            
            ;; Launch applications via shell command
            ([?\s-&] . (lambda (command)
                         (interactive (list (read-shell-command "$ ")))
                         (start-process-shell-command command nil command)))
                         
            ;; Switch workspace
            ([?\s-w] . exwm-workspace-switch)
            
            ;; 's-N': Switch to certain workspace with Super (Win) plus a number key (0 - 9)
            ,@(mapcar (lambda (i)
                        `(,(kbd (format "s-%d" i)) .
                          (lambda ()
                            (interactive)
                              (exwm-workspace-switch-create ,i))))
                      (number-sequence 0 9))))

     (exwm-enable))
   #+end_src
   
* Desktop Environment
  
** Desktop Key Bindings
   
   #+begin_src emacs-lisp
   (use-package desktop-environment
     :after exwm
     :config (desktop-environment-mode)
     :custom
     (desktop-environment-brightness-small-increment "2%+")
     (desktop-environment-brightness-small-decrement "2%-")
     (desktop-environment-brightness-normal-increment "5%+")
     (desktop-environment-brightness-normal-decrement "5%-"))
   #+end_src
  
** Launcher Script
   
   #+begin_src shell :tangle .config/emacs/exwm/start-exwm.sh :shebang #!/bin/sh
   picom -f &
   
   exec dbus-launch --exit-with-session emacs -mm --debug-init -l ~/.config/emacs/desktop.el
   #+end_src
