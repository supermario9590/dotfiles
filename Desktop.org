#+title: Emacs Desktop Environment
#+property: header-args:emacs-lisp :tangle ./.config/emacs/desktop.el

* Table of Contents
:PROPERTIES:
:TOC:      :include all
:END:

:CONTENTS:
- [[#table-of-contents][Table of Contents]]
- [[#window-management][Window Management]]
  - [[#exwm-configuration][EXWM Configuration]]
- [[#desktop-environment][Desktop Environment]]
  - [[#desktop-key-bindings][Desktop Key Bindings]]
  - [[#launcher-script][Launcher Script]]
  - [[#keyboard-configuration][Keyboard Configuration]]
:END:


* Window Management

** EXWM Configuration

#+begin_src emacs-lisp

  (defun av/run-in-background (command)
    (let ((command-parts (split-string command "[ ]+")))
      (apply #'call-process `(,(car command-parts) nil 0 nil ,@(cdr command-parts)))))

  (defun av/set-wallpaper ()
    (interactive)
    ;; NOTE: You will need to update this to a valid background path!
    (start-process-shell-command
        "nitrogen" nil  "nitrogen --restore"))

  (defun av/exwm-init-hook ()
    ;; Make workspace 1 be the one where we land at startup
    (exwm-workspace-switch-create 1)

    ;; Open eshell by default
    ;;(eshell)

    ;; Launch apps that will run in the background
    (av/run-in-background "nm-applet")
    (av/run-in-background "xfce4-power-manager"))

  (defun av/exwm-update-class ()
    (exwm-workspace-rename-buffer exwm-class-name))

  (use-package exwm
    :config
    (add-hook 'exwm-update-class-hook #'av/exwm-update-class)

    ;; When EXWM starts up, do some extra confifuration
    (add-hook 'exwm-init-hook #'av/exwm-init-hook)

    (setq exwm-workspace-number 5)

    (av/set-wallpaper)

    (setq exwm-input-prefix-keys
      '(?\C-x
        ?\C-u
        ?\C-h
        ?\M-x
        ?\M-`
        ?\M-&
        ?\M-:
        ?\C-\M-j
        ?\C-\ ))

    (setq exwm-input-global-keys
          `(
            ([?\s-r] . exwm-reset)
            ([s-left] . windmove-left)
            ([s-right] . windmove-right)
            ([s-up] . windmove-up)
            ([s-down] . windmove-down)
            ([?\s-&] . (lambda (command)
                         (interactive (list (read-shell-command "$ ")))
                         (start-process-shell-command command nil command)))
             ([?\s-w] . exwm-workspace-switch)

             ,@(mapcar (lambda (i)
                         `(,(kbd (format "s-%d" i)) .
                           (lambda ()
                             (interactive)
                             (exwm-workspace-switch-create ,i))))
                       (number-sequence 0 9))))

    (exwm-input-set-key (kbd "s-SPC") 'counsel-linux-app)
    (exwm-input-set-key (kbd "s-d") 'counsel-linux-app)
    (exwm-input-set-key (kbd "s-f") 'exwm-layout-toggle-fullscreen)

    ;; Remap CapsLock to Ctrl
    (start-process-shell-command "xmodmap" nil "xmodmap ~/.config/emacs/exwm/Xmodmap")

    ;; Systemtray
    (require 'exwm-systemtray)
    (exwm-systemtray-enable)

    (exwm-enable))

#+end_src

* Desktop Environment

** Desktop Key Bindings

#+begin_src emacs-lisp

  (use-package desktop-environment
    :after exwm
    :config (desktop-environment-mode)
    :custom
    (desktop-environment-brightness-small-increment "2%+")
    (desktop-environment-brightness-small-decrement "2%-")
    (desktop-environment-brightness-normal-increment "5%+")
    (desktop-environment-brightness-normal-decrement "5%-"))

#+end_src

** Launcher Script

#+begin_src shell :tangle ./.config/emacs/exwm/start-exwm.sh :shebang #!/bin/bash

  picom &

  xss-lock -- slock &

  exec dbus-launch --exit-with-session emacs -mm --debug-init -l ~/.config/emacs/desktop.el

#+end_src

** Keyboard Configuration

#+begin_src sh :tangle ./.config/emacs/exwm/Xmodmap

  clear lock
  clear control
  keycode 66 = Control_L
  add control = Control_L
  add Lock = Control_R

#+end_src
